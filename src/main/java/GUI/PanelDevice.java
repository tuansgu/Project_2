/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import BLL.BLLThietBi;
import DAL.thietbi;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.ItemEvent;
import java.awt.event.ItemListener;
import java.io.File;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFileChooser;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import javax.swing.SwingUtilities;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author pc
 */
public class PanelDevice extends javax.swing.JPanel {
    private BLLThietBi thietBiBLL;
    private DefaultTableModel tableModel;
    JPopupMenu popupMenu = new JPopupMenu();
    JMenuItem deleteMenuItem;
    JMenuItem updateMenuItem;
    /**
     * Creates new form GUIDevice
     */
    public PanelDevice() {
        initComponents();
        thietBiBLL = new BLLThietBi();
        deleteMenuItem = new JMenuItem("Delete");
        updateMenuItem = new JMenuItem("Update");
        popupMenu.add(deleteMenuItem);
        popupMenu.add(updateMenuItem);
        
        deleteMenuItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) {
                int selectedRow = qltb_table.getSelectedRow();
                if (selectedRow != -1) {
                    int maTB = (int) qltb_table.getValueAt(selectedRow, 0);

                    if (thietBiBLL.deleteThietBi(maTB)) {
                        displayDataInTable();
                        JOptionPane.showMessageDialog(null, "Xóa thiết bị thành công!", "Success", JOptionPane.INFORMATION_MESSAGE);
                    } else {
                        JOptionPane.showMessageDialog(null, "Xóa thiết bị thất bại!", "Fail", JOptionPane.INFORMATION_MESSAGE);
                    }
                }
            }
        });
        
        updateMenuItem.addActionListener(new ActionListener() {
            public void actionPerformed(ActionEvent e) { // Sửa "actionPerfomed" thành "actionPerformed"
                int selectedRow = qltb_table.getSelectedRow();
                if (selectedRow != -1) {
                    int maTB = (int) qltb_table.getValueAt(selectedRow, 0);
                    String tenTB = (String) qltb_table.getValueAt(selectedRow, 1); 
                    String moTaTB = (String) qltb_table.getValueAt(selectedRow, 2); 
                    UpdateDeviceDlg updateDlg = new UpdateDeviceDlg(new javax.swing.JFrame(), true, maTB, tenTB, moTaTB);
                    updateDlg.setVisible(true);
                }
                displayDataInTable();
            }
        });
        displayDataInTable();
        loadCategoryDevice();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        qltb_table = new javax.swing.JTable();
        qltb_label = new javax.swing.JLabel();
        add_tb = new javax.swing.JButton();
        import_tb = new javax.swing.JButton();
        reload_tb = new javax.swing.JButton();
        search_tb = new javax.swing.JButton();
        input_tb = new javax.swing.JTextField();
        xoaNhieuCmb = new javax.swing.JComboBox<>();

        qltb_table.setFont(new java.awt.Font("Lucida Grande", 0, 14)); // NOI18N
        qltb_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Mã thiết bị", "Tên thiết bị", "Mô tả thiết bị"
            }
        ));
        qltb_table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                qltb_tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(qltb_table);

        qltb_label.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        qltb_label.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        qltb_label.setText("Quản lý thiết bị");

        add_tb.setText("Thêm thiết bị");
        add_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_tbActionPerformed(evt);
            }
        });

        import_tb.setText("Import");
        import_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                import_tbActionPerformed(evt);
            }
        });

        reload_tb.setText("Reload");
        reload_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reload_tbActionPerformed(evt);
            }
        });

        search_tb.setText("Search");
        search_tb.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                search_tbActionPerformed(evt);
            }
        });

        xoaNhieuCmb.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(add_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(93, 93, 93)
                        .addComponent(import_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(input_tb))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addComponent(reload_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(41, 41, 41)
                        .addComponent(search_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(88, 88, 88)
                .addComponent(xoaNhieuCmb, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(361, 361, 361)
                .addComponent(qltb_label, javax.swing.GroupLayout.PREFERRED_SIZE, 311, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(375, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(qltb_label, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(import_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(reload_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(52, 52, 52)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(input_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(search_tb, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(xoaNhieuCmb, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 453, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    public void displayDataInTable() {
        List<thietbi> listThietBi = thietBiBLL.getAllThietBi();

        DefaultTableModel model = (DefaultTableModel) qltb_table.getModel();
        model.setRowCount(0); // Clear the table before adding new data

        for (thietbi tb : listThietBi) {
            Object[] row = {
                tb.getMaTB(),
                tb.getTenTB(),
                tb.getMoTaTB()
            };
            model.addRow(row);
        }
    }
    
    private void qltb_tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_qltb_tableMouseClicked
        if (SwingUtilities.isRightMouseButton(evt)) {
            int row = qltb_table.rowAtPoint(evt.getPoint());
            qltb_table.getSelectionModel().setSelectionInterval(row, row);
            popupMenu.show(qltb_table, evt.getX(), evt.getY());
        }
    }//GEN-LAST:event_qltb_tableMouseClicked

    private void add_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_tbActionPerformed
        InsertDeviceDlg insertDevice = new InsertDeviceDlg(new javax.swing.JFrame(), true);
        insertDevice.setVisible(true);
        displayDataInTable();
    }//GEN-LAST:event_add_tbActionPerformed

    private void import_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_import_tbActionPerformed
        JFileChooser fileChooser = new JFileChooser();
        int returnValue = fileChooser.showOpenDialog(null);
        if (returnValue == JFileChooser.APPROVE_OPTION) {
            File selectedFile = fileChooser.getSelectedFile();
            // Gọi phương thức import từ tệp Excel ở đây
            if (thietBiBLL.importFromExcel(selectedFile)) {
                JOptionPane.showMessageDialog(null, "Import thành công!");
                displayDataInTable();
            } else {
                JOptionPane.showMessageDialog(this, "Import thất bại", "Error", JOptionPane.ERROR_MESSAGE);
                return;
            }

        }

    }//GEN-LAST:event_import_tbActionPerformed

    private void reload_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reload_tbActionPerformed
        displayDataInTable();
    }//GEN-LAST:event_reload_tbActionPerformed

    private void search_tbActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_search_tbActionPerformed
        searchData();
    }//GEN-LAST:event_search_tbActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add_tb;
    private javax.swing.JButton import_tb;
    private javax.swing.JTextField input_tb;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel qltb_label;
    private javax.swing.JTable qltb_table;
    private javax.swing.JButton reload_tb;
    private javax.swing.JButton search_tb;
    private javax.swing.JComboBox<String> xoaNhieuCmb;
    // End of variables declaration//GEN-END:variables

    private void searchData() {
        String inputSearch = input_tb.getText();
        if (inputSearch.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập giá trị cần tìm kiếm", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        List<thietbi> searchResult = thietBiBLL.searchData(inputSearch);

        DefaultTableModel model = (DefaultTableModel) qltb_table.getModel();
        model.setRowCount(0); // Clear the table before adding new data

        for (thietbi tb : searchResult) {
            Object[] row = {
                tb.getMaTB(),
                tb.getTenTB(),
                tb.getMoTaTB()
            };
            model.addRow(row);
        }
    }
    
    private void loadCategoryDevice() {
        List<String> categoriesDevice = thietBiBLL.loadCategoryDevice();
        DefaultComboBoxModel<String> model = new DefaultComboBoxModel<>();

        model.addElement("Chọn chọn loại thiết bị để xoá");

        for(String categoryDevice : categoriesDevice) {
            model.addElement(categoryDevice);
        }

        xoaNhieuCmb.setModel(model);
        xoaNhieuCmb.setSelectedIndex(0);

        xoaNhieuCmb.addItemListener(new ItemListener() {
            @Override
            public void itemStateChanged(ItemEvent e) {
                if (e.getStateChange() == ItemEvent.SELECTED) {
                    String selectedCategory = (String) xoaNhieuCmb.getSelectedItem();
                    int choice = JOptionPane.showConfirmDialog(null, "Bạn có chắc muốn xóa không?", "Xác nhận xoá", JOptionPane.YES_NO_OPTION);
                    
                    if (choice == JOptionPane.YES_OPTION) {
                        boolean success = thietBiBLL.deleteThanhVienByCategoryDevice(selectedCategory);
                        
                        if (success) {
                            JOptionPane.showMessageDialog(null, "Xóa thành viên thành công!", "Success", JOptionPane.INFORMATION_MESSAGE);
                            loadCategoryDevice();
                            displayDataInTable();
                        } else {
                            JOptionPane.showMessageDialog(null, "Xóa thành viên thất bại!", "Fail", JOptionPane.ERROR_MESSAGE);
                        }
                    }
                }
            }
        });
    }
}
